APP:
  LOG_LEVEL: DEBUG
  SLEEPY_TIME: 1800
  ARR_CLEANUP_DELAY_S: 28800
QBIT:

    # Initialize API for qBittorrent client.
    # Host must be specified. Username and password can be specified at login.
    # A call to :meth:`~qbittorrentapi.auth.AuthAPIMixIn.auth_log_in` is not explicitly
    # required if username and password are provided during Client construction.
    # :Usage:
    #     >>> from qbittorrentapi import Client
    #     >>> client = Client(host='localhost:8080', username='admin', password='adminadmin')
    #     >>> torrents = client.torrents_info()
    # :param host: hostname for qBittorrent Web API, ``[http[s]://]localhost[:8080][/path]``
    # :param port: port number for qBittorrent Web API (ignored if host contains a port)
    # :param username: username for qBittorrent Web API
    # :param password: password for qBittorrent Web API
    # :param SIMPLE_RESPONSES: By default, complex objects are returned from some
    #     endpoints. These objects will allow for accessing responses' items as
    #     attributes and include methods for contextually relevant actions. This
    #     comes at the cost of performance. Generally, this cost isn't large;
    #     however, some endpoints, such as ``torrents_files()`` method, may need
    #     to convert a large payload. Set this to True to return the simple JSON
    #     back. Alternatively, set this to True only for an individual method call.
    #     For instance, when requesting the files for a torrent:
    #     ``client.torrents_files(hash='...', SIMPLE_RESPONSES=True)``
    # :param VERIFY_WEBUI_CERTIFICATE: Set to False to skip verify certificate for
    #     HTTPS connections; for instance, if the connection is using a self-signed
    #     certificate. Not setting this to False for self-signed certs will cause a
    #     :class:`~qbittorrentapi.exceptions.APIConnectionError` exception to be raised.
    # :param EXTRA_HEADERS: Dictionary of HTTP Headers to include in all requests
    #     made to qBittorrent.
    # :param REQUESTS_ARGS: Dictionary of configuration for Requests package:
    #     `<https://requests.readthedocs.io/en/latest/api/#requests.request>`_
    # :param FORCE_SCHEME_FROM_HOST: If a scheme (i.e. ``http`` or ``https``) is
    #     specified in host, it will be used regardless of whether qBittorrent is
    #     configured for HTTP or HTTPS communication. Normally, this client will
    #     attempt to determine which scheme qBittorrent is actually listening on...
    #     but this can cause problems in rare cases. Defaults ``False``.
    # :param RAISE_NOTIMPLEMENTEDERROR_FOR_UNIMPLEMENTED_API_ENDPOINTS: Some Endpoints
    #     may not be implemented in older versions of qBittorrent. Setting this to True
    #     will raise a :class:`NotImplementedError` instead of just returning``None``.
    # :param RAISE_ERROR_FOR_UNSUPPORTED_QBITTORRENT_VERSIONS: raise the
    #     UnsupportedQbittorrentVersion exception if the connected version of
    #     qBittorrent is not fully supported by this client. Defaults ``False``.
    # :param DISABLE_LOGGING_DEBUG_OUTPUT: Turn off debug output from logging for
    #     this package as well as Requests & urllib3.

  host: qbittorrent
  port: 8080
  # username: null
  # password: null
  # EXTRA_HEADERS: null
  # REQUESTS_ARGS: null
  # VERIFY_WEBUI_CERTIFICATE: True
  # FORCE_SCHEME_FROM_HOST: False
  # RAISE_NOTIMPLEMENTEDERROR_FOR_UNIMPLEMENTED_API_ENDPOINTS: True
  # RAISE_ERROR_FOR_UNSUPPORTED_QBITTORRENT_VERSIONS: False
  # VERBOSE_RESPONSE_LOGGING: False
  # SIMPLE_RESPONSES: False
  # DISABLE_LOGGING_DEBUG_OUTPUT: False